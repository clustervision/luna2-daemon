{% autoescape None %}
#
# DHCP Server Configuration file.
# created by Luna
#
authoritative;

option domain-name "{{ DOMAINNAME }}";
option luna-id code 129 = text;
option client-architecture code 93 = unsigned integer 16;
{% if NTPSERVERS -%}
option ntp-servers {{ NTPSERVERS }};
{%- endif %}
{% if NAMESERVERS -%}
option domain-name-servers {{ NAMESERVERS }};
{%- endif %}

ddns-updates on;
ddns-update-style standard;
do-forward-updates on;
update-optimization off;
#update-conflict-detection false;
ignore client-updates;

{% if OMAPIKEY -%}
omapi-port 7911;
omapi-key omapi_key;

key omapi_key {
    algorithm hmac-md5;
    secret {{ OMAPIKEY }};
}
{%- endif %}

# how to get luna_ipxe.efi and luna_undionly.kpxe :
# git clone git://git.ipxe.org/ipxe.git
# cd ipxe/src
# make bin/undionly.kpxe
# cp bin/undionly.kpxe /var/lib/tftpboot/luna_undionly.kpxe
# make bin-x86_64-efi/ipxe.efi
# cp bin-x86_64-efi/ipxe.efi /var/lib/tftpboot/luna_ipxe.efi
#
# Client architectures:
# 00:00 standard PC BIOS
# 00:06 32-bit x86 EFI
# 00:07 64-bit x86 EFI
# 00:0a 32-bit ARM EFI
# 00:0b 64-bit ARM EFI


{% for CLASS in CLASSES %}
class "{{ CLASSES[CLASS]['network'] }}" {
    match if substring (option vendor-class-identifier, 0, 5) = "udhcp";
}
{% endfor -%}

{% for ZONE in ZONES %}
zone {{ ZONES[ZONE]['forward'] }}. { 
    primary {{ ZONES[ZONE]['primary'] }};
    key omapi_key;
}
zone {{ ZONES[ZONE]['reverse'] }}. { 
    primary {{ ZONES[ZONE]['primary'] }};
    key omapi_key;
}
{% endfor -%}

{% for SHARE in SHARED %}
shared-network {{ SHARE }} {
    {% for SUBNET in SHARED[SHARE] -%}
    subnet {{ SHARED[SHARE][SUBNET]['network'] }} netmask {{ SHARED[SHARE][SUBNET]['netmask'] }} {
        max-lease-time 28800;
        {%- if SHARED[SHARE][SUBNET]['nextserver'] is defined %}
        if exists user-class and option user-class = "iPXE" {
            filename "http://{{ SHARED[SHARE][SUBNET]['nextserver'] }}:{{ SHARED[SHARE][SUBNET]['nextport'] }}/boot";
        } else {
            if option client-architecture = 00:07 {
                filename "luna_ipxe.efi";
            }
            elsif option client-architecture = 00:0b {
                filename "luna_ipxe_arm64.efi";
            }
            elsif option client-architecture = 00:0e {
                # OpenPower do not need binary to execute.
                # Petitboot will request for config
            }
            else {
                filename "luna_undionly.kpxe";
            }
        }
        next-server {{ SHARED[SHARE][SUBNET]['nextserver'] }};
        {%- endif %}
        {%- if SHARED[SHARE][SUBNET]['nameserver_ip'] %}
        option domain-name-servers {{ SHARED[SHARE][SUBNET]['nameserver_ip'] }};
        {%- endif %}
        {%- if SHARED[SHARE][SUBNET]['ntp_server'] %}
        option ntp-servers {{ SHARED[SHARE][SUBNET]['ntp_server'] }};
        {%- endif %}
        {%- if SHARED[SHARE][SUBNET]['gateway'] is defined %}
        option routers {{ SHARED[SHARE][SUBNET]['gateway'] }};
        {%- endif %}
        {%- if SHARED[SHARE][SUBNET]['domain'] is defined %}
        option domain-name "{{ SHARED[SHARE][SUBNET]['domain'] }}";
        {%- endif %}
        {%- if SUBNET in ZONES %}
        ddns-domainname "{{ ZONES[SUBNET]['domain'] }}.";
        ddns-rev-domainname "in-addr.arpa.";
        update-static-leases on;
        {%- endif %}
        option luna-id "lunaclient";
    }
    {% endfor -%}
    {% for POOL in POOLS -%}
    pool {
        {% for MEMBER in POOLS[POOL]['members'] -%}
        {{ POOLS[POOL]['policy'] }} members of "{{ MEMBER }}";
        {% endfor -%}
        range {{ POOLS[POOL]['range_begin'] }} {{ POOLS[POOL]['range_end'] }};
    }
    {% endfor %}
}
{% endfor -%}

{% for SUBNET in SUBNETS %}
subnet {{ SUBNETS[SUBNET]['network'] }} netmask {{ SUBNETS[SUBNET]['netmask'] }} {
    max-lease-time 28800;
    {%- if SUBNETS[SUBNET]['nextserver'] %}
    if exists user-class and option user-class = "iPXE" {
        filename "http://{{ SUBNETS[SUBNET]['nextserver'] }}:{{ SUBNETS[SUBNET]['nextport'] }}/boot";
    } else {
        if option client-architecture = 00:07 {
            filename "luna_ipxe.efi";
        }
        elsif option client-architecture = 00:0b {
            filename "luna_ipxe_arm64.efi";
        }
        elsif option client-architecture = 00:0e {
            # OpenPower do not need binary to execute.
            # Petitboot will request for config
        }
        else {
            filename "luna_undionly.kpxe";
        }
    }
    {%- if SUBNETS[SUBNET]['nameserver_ip'] %}
    option domain-name-servers {{ SUBNETS[SUBNET]['nameserver_ip'] }};
    {%- endif %}
    {%- if SUBNETS[SUBNET]['ntp_server'] %}
    option ntp-servers {{ SUBNETS[SUBNET]['ntp_server'] }};
    {%- endif %}
    next-server {{ SUBNETS[SUBNET]['nextserver'] }};
    {%- endif %}
    range {{ SUBNETS[SUBNET]['range_begin'] }} {{ SUBNETS[SUBNET]['range_end'] }};
    {%- if SUBNETS[SUBNET]['gateway'] is defined %}
    option routers {{ SUBNETS[SUBNET]['gateway'] }};
    {%- endif %}
    {%- if SUBNETS[SUBNET]['domain'] is defined %}
    option domain-name "{{ SUBNETS[SUBNET]['domain'] }}";
    {%- endif %}
    {%- if SUBNET in ZONES %}
    ddns-domainname "{{ ZONES[SUBNET]['domain'] }}.";
    ddns-rev-domainname "in-addr.arpa.";
    update-static-leases on;
    {%- endif %}
    option luna-id "lunaclient";
}
{% endfor -%}

{% for SUBNET in EMPTY %}
subnet {{ EMPTY[SUBNET]['network'] }} netmask {{ EMPTY[SUBNET]['netmask'] }} {
}
{% endfor -%}

{% for HOST in HOSTS %}
host {{ HOST }} {
    hardware ethernet {{ HOSTS[HOST]['macaddress'] }};
    fixed-address {{ HOSTS[HOST]['ipaddress'] }};
}
{% endfor -%}

{% endautoescape  %}
